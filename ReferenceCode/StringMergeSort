// BOJ1181
#include <iostream>
#include <string.h>

using namespace std;

int n;
string str[20001];
string tmp[20001];
int len[20001];
int tLen[20001];

int strcmp(int a, int b){
    if(len[a] == len[b]){ // 비교
        for(int i=0; str[a][i]; i++){
            if(str[a][i] < str[b][i]) return -1;
            else if(str[b][i] < str[a][i]) return 1;
        }
        return 0;
    }
    else return len[a] - len[b];
}

void MergeSort(int l, int r){
    if(l==r)return;
    int mid = (l+r)/2;

    MergeSort(l, mid);
    MergeSort(mid+1, r);

    int i=l, j=mid+1, k=l;
    while(i<=mid && j<=r){
        if(strcmp(i, j) <= 0){
            tmp[k] = str[i];
            tLen[k++] = len[i++];
        }
        else{
            tmp[k] = str[j];
            tLen[k++] = len[j++];
        }
    }
    while(i<=mid){
        tmp[k] = str[i];
        tLen[k++] = len[i++];
    }
    while(j<=r){
        tmp[k] = str[j];
        tLen[k++] = len[j++];
    }

    for(i=l; i<=r; i++){
        str[i] = tmp[i];
        len[i] = tLen[i];
    }
    return;
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin >> n;
    for(int i=0; i<n; i++) {
        cin >> str[i];
        len[i] = str[i].length();
    }
    MergeSort(0, n-1);

    cout << str[0] << "\n";
    for(int i=1; i<n; i++){
        if(strcmp(i-1, i) != 0) cout << str[i] << "\n";
    }
}
