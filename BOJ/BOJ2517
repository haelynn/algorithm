#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

typedef struct Player{
	int idx;
	int sum;
	int num;

	bool operator <(const Player &a)const {
		return idx < a.idx;
	}
};

Player arr[500001];
Player tmp[500001];

void Merge(int l, int mid, int r) {
	
	int i = l;
	int j = mid + 1;
	int k = l;

	while (i <= mid && j <= r) {
		if (arr[i].num > arr[j].num) tmp[k++] = arr[i++];
		else {
			tmp[k] = arr[j++];
			tmp[k++].sum += mid - i + 1;
		}
	}

	while (i <= mid) tmp[k++] = arr[i++];
	while (j <= r) tmp[k++] = arr[j++];
	for (int i = l; i <= r; i++) arr[i] = tmp[i];
}

void MergeSort(int l, int r) {
	
	int mid;
	if (l < r) {
		mid = (l + r) / 2;
		MergeSort(l, mid);
		MergeSort(mid + 1, r);
		Merge(l, mid, r);
	}
}

int main() {

	int n;
	scanf("%d", &n);

	for (int i = 1; i <= n; i++) {
		scanf("%d", &arr[i].num);

		arr[i].idx = i;
		arr[i].sum = 0;
	}

	MergeSort(1, n);
	sort(arr + 1, arr + n + 1);

	for (int i = 1; i <= n; i++) printf("%d\n", arr[i].idx - arr[i].sum);
	
}
