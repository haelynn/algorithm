// https://colynn.tistory.com/8
#include <iostream>
#include <algorithm>

using namespace std;

int n, m;
int ans = 11;
char arr[11][11];
int dy[4] = {-1, 1, 0, 0}; // 상하좌우
int dx[4] = {0, 0, -1, 1};
pair<int, int> ball[2];

bool InRange(int y, int x){
    return y >= 0 && y < n && x >= 0 && x < m;
}

int MoveFirst(pair<int, int> b[2], int dir){
    if(dir == 0){
        if(b[0].first < b[1].first) return 0;
        else return 1;
    }
    else if(dir == 1){
        if(b[0].first > b[1].first) return 0;
        else return 1;
    }
    else if(dir == 2){
        if(b[0].second < b[1].second) return 0;
        else return 1;
    }
    else if(dir == 3){
        if(b[0].second > b[1].second) return 0;
        else return 1;
    }

    return 0;
}

void DFS(int idx, pair<int, int> b[2]) {
    if (idx == 10) return;

    bool flag[2] = {false, false};
    pair<int, int> nextBall[2];

    for(int d=0; d<4; d++){
        int first = MoveFirst(b, d);
        flag[0] = flag[1] = false;
        nextBall[0] = b[0];
        nextBall[1] = b[1];

        for(int j=0; j<2; j++){
            int y = b[first].first + dy[d];
            int x = b[first].second + dx[d];

            while(InRange(y, x) && arr[y][x] == '.'){
                y += dy[d];
                x += dx[d];
            }
            if(arr[y][x] == 'O'){
                flag[first] = true;
                first = !first;
                continue;
            }

            y -= dy[d];
            x -= dx[d];
            nextBall[first] = {y, x};

            if(!first) arr[y][x] = 'R';
            else arr[y][x] = 'B';
            first = !first;
        }
        for(int j=0; j<2; j++){
            if(arr[nextBall[j].first][nextBall[j].second] != '0') arr[nextBall[j].first][nextBall[j].second] = '.';
        }

        if(flag[0] && !flag[1]){
            ans = min(ans, idx+1);
            return;
        }

        if(nextBall[0].first == b[0].first && nextBall[0].second == b[0].second
        && nextBall[1].first == b[1].first && nextBall[1].second == b[1].second) continue;
        if(!flag[0] && !flag[1]) DFS(idx+1, nextBall);
    }
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin >> n >> m;
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            cin >> arr[i][j];

            if(arr[i][j] == 'R'){
                ball[0] = make_pair(i, j);
                arr[i][j] = '.';
            }
            else if(arr[i][j] == 'B'){
                ball[1] = make_pair(i, j);
                arr[i][j] = '.';
            }
        }
    }

    DFS(0, ball);
    if(ans > 10) ans = -1;
    cout << ans << "\n";
}
