#include <iostream>
#include <queue>
#include <cstring>
#include <algorithm>

using namespace std;

int r, c, ans=987654321;
char arr[50][50];
int checked[50][50][2];
int dy[4] = {0, 0, -1, 1};
int dx[4] = {-1, 1, 0, 0};
vector <pair<int ,int> > water;
pair<int, int> start;
pair<int, int> fin;

bool InRange(int y, int x){
    if(y>-1 && x>-1 && y<r && x<c) return true;
    else return false;
}

void WaterBfs(int y, int x){
    queue <pair<int, int> > q;
    checked[y][x][0] = 0;

    q.push({y, x});

    while(!q.empty()){
        int fy = q.front().first;
        int fx = q.front().second;
        q.pop();

        for(int i=0; i<4; i++){
            int ny = fy + dy[i];
            int nx = fx + dx[i];

            if(!InRange(ny, nx)) continue;
            if(arr[ny][nx] == '.' && checked[ny][nx][0] == -1){
                checked[ny][nx][0] = checked[fy][fx][0] + 1;
                q.push({ny, nx});
            }
        }
    }
}

void MoveBfs(){
    queue <pair<int, int> > q;
    checked[start.first][start.second][1] = 0;

    q.push({start.first, start.second});

    while(!q.empty()){
        int fy = q.front().first;
        int fx = q.front().second;
        q.pop();

        for(int i=0; i<4; i++){
            int ny = fy + dy[i];
            int nx = fx + dx[i];

            if(ny == fin.first && nx == fin.second) {
                ans = min(ans, checked[fy][fx][1] + 1);
                continue;
            }
            if(!InRange(ny, nx)) continue;
            if(arr[ny][nx] == '.' && checked[ny][nx][1] == -1){
                if(checked[ny][nx][0] == -1 || checked[ny][nx][0] > checked[fy][fx][1] + 1){
                    checked[ny][nx][1] = checked[fy][fx][1] + 1;
                    q.push({ny, nx});
                }
            }
        }
    }
}

int main(){
    std::ios::sync_with_stdio(false);

    cin >> r >> c;
    for(int i=0; i<r; i++){
        for(int j=0; j<c; j++){
            cin >> arr[i][j];

            if(arr[i][j] == '*') water.push_back({i, j});
            else  if(arr[i][j] == 'S') start = {i, j};
            else if(arr[i][j] == 'D') fin = {i, j};
        }
    }

    memset(checked, -1, sizeof(checked));

    for(int i=0; i<water.size(); i++) WaterBfs(water[i].first, water[i].second);
    MoveBfs();

    if(ans == 987654321) cout << "KAKTUS\n";
    else cout << ans << "\n";
}
