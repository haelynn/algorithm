// https://blog.naver.com/kimh0429/221432662200

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> sCard;
vector<int> card;
vector<pair<int, int> > tCard;

int main(){
    std::ios::sync_with_stdio(false);

    int n, m, tmp;

    cin >> n;
    for(int i=0; i<n; i++){
        cin >> tmp;
        sCard.push_back(tmp);
    }

    cin >> m;
    for(int i=0; i<m; i++){
        cin >> tmp;
        card.push_back(tmp);
    }

    sort(sCard.begin(), sCard.end());

    tCard.push_back({sCard[0], 1});
    int idx = 0;
    for(int i=1; i<n; i++){
        if(tCard[idx].first == sCard[i]){
            tCard[idx].second++;
        }
        else{
            tCard.push_back({sCard[i], 1});
            idx++;
        }
    }

    for(int i=0; i<m; i++){
        int target = card[i];
        int left = 0, right = tCard.size()-1;
        int ans = 0;

        while(left <= right){
            int mid = (left + right) / 2;

            if(tCard[mid].first > target)
                right = mid - 1;

            else if(tCard[mid].first < target)
                left = mid + 1;

            else{
                ans = tCard[mid].second;
                break;
            }
        }
        cout << ans << " ";
    }
    cout << "\n";
}
