// https://blog.naver.com/kimh0429/221430755766

#include <iostream>
#include <algorithm>
#define INF 0x7fffffff

using namespace std;

int n, p, m, mul, divi;
int num[12]; // + - x /
int ansMax = -INF, ansMin = INF;

void DFS(int a, int b, int c, int d, string str){
    if(a+b+c+d == 0){

        int sum = num[0];
        for(int i=0; i<str.length(); i++){
            if(str[i] == '+')
                sum += num[i+1];

            else if(str[i] == '-')
                sum -= num[i+1];

            else if(str[i] == '*')
                sum *= num[i+1];

            else sum /= num[i+1];
        }

        ansMax = max(ansMax, sum);
        ansMin = min(ansMin, sum);
        return;
    }

    if(a) DFS(a-1, b, c, d, str + '+');

    if(b) DFS(a, b-1, c, d, str + '-');

    if(c) DFS(a, b, c-1, d, str + '*');

    if(d) DFS(a, b, c, d-1, str + '/');


}

int main(){
    std::ios::sync_with_stdio(false);

    cin >> n;
    for(int i=0; i<n; i++) cin >> num[i];
    cin >> p >> m >> mul >> divi;

    DFS(p, m, mul, divi , "");

    cout << ansMax << "\n" << ansMin << "\n";
}
