// https://blog.naver.com/kimh0429/221161548435

#include <iostream>
#include <algorithm>

using namespace std;

int main() {

	int n;
	int maxP = 0;
	int work[16][2], dp[16];

	cin >> n;

	for (int i = 1; i <= n; i++) {
		cin >> work[i][0] >> work[i][1];
	}


	for (int i = 1; i <= n; i++) {

		dp[i] = work[i][1];
		
		if (i + work[i][0] - 1 > n) {
			dp[i] = 0;
			continue;
		}

		for (int j = 1; j < i; j++) {
			
			if (j + work[j][0] - 1 < i) {
				dp[i] = max(dp[i], dp[j] + work[i][1]);
			}
		}

		maxP = max(dp[i], maxP);
	}

	cout << maxP << endl;
}
