#include <iostream>
#include <vector>

using namespace std;

struct Ball{
    int y;
    int x;
    int cnt;
};
Ball ball[501][501];
int r, c, fy, fx, ny, nx;
int arr[501][501][2];
int dy[8] = {-1, -1, -1, 0, 0, 1, 1, 1};
int dx[8] = {-1, 0, 1, -1, 1, -1, 0, 1};

bool InRange(int y, int x){
    return y >= 0 && y < r && x >= 0 && x < c;
}

int main(){

    scanf("%d %d", &r, &c);
    for(int i=0; i<r; i++){
        for(int j=0; j<c; j++){
            scanf("%d", &arr[i][j][0]);
            ball[i][j].cnt = 0;
        }
    }

    for(int i=0; i<r; i++){
        for(int j=0; j<c; j++){
            int mn = arr[i][j][0];
            int flag = -1;

            for(int d=0; d<8; d++){
                ny = i + dy[d];
                nx = j + dx[d];

                if(!InRange(ny, nx)) continue;
                if(arr[ny][nx][0] < mn){
                    mn = arr[ny][nx][0];
                    flag = d;
                }
            }

            if(mn == arr[i][j][0]) {
                arr[i][j][1] = -1;
                ball[i][j].y = i;
                ball[i][j].x = j;
            }
            else arr[i][j][1] = flag;
        }
    }

    for(int i=0; i<r; i++){
        for(int j=0; j<c; j++){
            fy = i;
            fx = j;

            while(arr[fy][fx][1] != -1){
                int tmp = arr[fy][fx][1];
                fy += dy[tmp];
                fx += dx[tmp];
            }

            arr[i][j][1] = -1;
            ball[i][j].y = ball[fy][fx].y;
            ball[i][j].x = ball[fy][fx].x;

            ball[ball[i][j].y][ball[i][j].x].cnt++;

          }
    }

    // output
    for(int i=0; i<r; i++){
        for(int j=0; j<c; j++)
            printf("%d ", ball[i][j].cnt);
        printf("\n");
    }
}
