// https://blog.naver.com/kimh0429/221433694085

#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

string Solution(string a, string b){

    if(b.length() > a.length()){
        string tmp = a;
        a = b;
        b = tmp;
    }

    if(a.length() > b.length()){
        int blank = a.length() - b.length();
        for(int i=0; i<blank; i++)
            b.insert(0, "0");
    }

    string ans = "";
    string tmp = "";
    int carry = 0;

    for(int i=a.length()-1; i>=0; i--){
        int sum = a[i] - '0' + b[i] - '0' + carry;

        carry = sum / 10;
        sum = sum % 10;

        tmp = "";
        tmp += sum + '0';
        ans.insert(0, tmp);
    }

    if(carry > 0){
        tmp = "";
        tmp += carry + '0';
        ans.insert(0, tmp);
    }

    return ans;
}

int main(){

    std::ios::sync_with_stdio(false);

    int n;
    string dp[251];

    dp[0] = 1 + '0';
    dp[1] = 1 + '0';
    dp[2] = 3 + '0';
    dp[3] = 5 + '0';

    int maxAns = 3;

    while(scanf("%d", &n) != EOF){
        if(n > maxAns){
            for(int i=maxAns+1; i<=n; i++){
                // dp[i] = dp[i-1] + 2 * dp[i-2];
                string tmp = Solution(dp[i-2], dp[i-2]);
                dp[i] = Solution(dp[i-1], tmp);
            }
            maxAns = n;
        }
        cout << dp[n] << "\n";
    }

}
