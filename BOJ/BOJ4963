// https://blog.naver.com/kimh0429/221441130848

#include <iostream>
#include <string.h>
#include <queue>

using namespace std;

int w, h;
int arr[51][51], visited[51][51] = {0, };

bool InRange(int y, int x){
    return y >= 0 && y < h && x >= 0 && x < w;
}

void Solution(int y, int x){

    queue<pair<int, int> > q;
    q.push({y, x});

    while(!q.empty()){
        int fy = q.front().first;
        int fx = q.front().second;
        q.pop();

        for(int i=-1; i<=1; i++){
            for(int j=-1; j<=1; j++){
                int ny = fy + i;
                int nx = fx + j;

                if(InRange(ny, nx) && arr[ny][nx] && !visited[ny][nx]){
                    q.push({ny, nx});
                    visited[ny][nx]++;
                }
            }
        }
    }
}

int main(){
    std::ios::sync_with_stdio(false);

    while(true){
        cin >> w >> h;
        if(!w && !h) return 0;

        memset(visited, 0, sizeof(visited));
        for(int i=0; i<h; i++){
            for(int j=0; j<w; j++)
                cin >> arr[i][j];
        }

        int cnt = 0;
        for(int i=0; i<h; i++){
            for(int j=0; j<w; j++){
                if(!visited[i][j] && arr[i][j]){
                    cnt++;
                    visited[i][j]++;
                    Solution(i, j);
                }
            }
        }

        cout << cnt << "\n";
    }
}
